                            ;主引导程序
SECTION MBR vstart=0x7c00   ;--------
mov ax,cs                   ;把ax初始化为0(寄存器cs为0)
mov ds,ax                   ;用ax初始化ds（段寄存器），下同理
mov es,ax                   
mov ss,ax
mov fs,ax
mov sp,0x7c00               ;(栈顶指针寄存器)
                            ;清屏 利用0x06号功能，上卷全部行，完成清屏
                            ;INT 0x10 功能号：0x06 功能描述：上卷窗口
                            ;输入
                            ;AH 功能号 = 0x86
                            ;AL 上卷的行数（0表示全部）
                            ;BH 上卷行属性
                            ;（CL，CH）窗口左上角的（X，Y）位置
                            ;（DL，DH）窗口右下角的（X，Y）位置
                            ;无返回值
mov ax,0x0600               ;ah中输入功能号，ax high位为0x06,low位为00
mov bx,0x0700               ;0x07表示黑底白字填充本行
mov cx,0                    ;左上角(0,0)
mov dx,0x184f               ;右下角(80,25)80个字符一行，25列
                            ;0x18 = 24,0x4f = 79
int 0x10                    ;int 0x10
                            ;；；；；；获取光标位置；；；；；；
mov ah,3                    ;输入：三号子功能是获取光标位置，存入ah寄存器
mov bh,0                    ;存储待获取光标的页号(0代表当前页)

int 0x10                    ;输出：ch光标等于开始行，cl光标等于结束行
                            ;dh=光标所在行号，dl=光标所在列号
                            ;;;;;;获取光标位置结束;;;;;;

                            ;;;;;;打印字符串;;;;;;
                            ;10h中断，13号子功能打印字符串
mov ax,message              ;message的地址放到ax，ax放到bp 
mov bp,ax                   ;es，bp为串首地址，es此时与cs一致
                            ;开头已被sreg初始化 
                            ;
                            ;光标位置要用到dx寄存器里面的内容，cx中的光标位置可忽略
mov cx,5                    ;显示字符串长度(不包括结束符0)
mov ax,0x1301               ;子功能号13显示字符及属性，存入ah寄存器
                            ;al表示设置写字符方式，ah=01：显示字符串，光标跟随移动
                            ;ah = 00：显示字符串，光标不动
                            ;ah = 02：显示字符串和字符属性，光标不变
                            ;ah = 03：显示字符串和字符属性，光标跟随移动
mov bx,0x2                  ;bh储存要显示的页号，此处是第0页
                            ;bl中是字符属性，属性黑底绿字(bl = 02h,07是黑底白字)
int 0x10                    ;执行BOIS 0x10 号中断
                            ;;;;;;打印字符串结束；；；；；
jmp $                       ;使程序悬停在此(一直跳到地址$)

message db "1 MBR"
times 510-($-$$) db 0       ;填充0
db 0x55, 0xaa
